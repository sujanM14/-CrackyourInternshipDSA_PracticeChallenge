/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<String> binaryTreePaths(TreeNode root) {
        List<String> ans= new ArrayList<>();
       helper(root,ans,"" ) ;
       return ans;
    }
    public void helper(TreeNode root,List<String> ans ,String str)
    {
        if(root !=null && root.left==null && root.right==null )
        {
            str+=root.val+"";
            ans.add(new String(str));
            return;
        }
        if(root==null)
        return;
        str+=root.val+"->";
        helper(root.left,ans,str);
        helper(root.right,ans,str);
    }
}
