/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int pathSum(TreeNode root, int targetSum) {
        if(root == null) return 0;
        return helper(root,targetSum) + pathSum(root.left, targetSum) + pathSum(root.right, targetSum);
    }
    private int helper(TreeNode root, long sum){
        if(root == null) return 0;
        return(sum - root.val == 0 ? 1:0) + helper(root.left, sum - root.val) + helper(root.right, sum - root.val);
    }
    // int ans=0;
    // public int pathSum(TreeNode root, int targetSum) {
    //     if(root==null)
    //     return 0;
    //     helper(root,targetSum,0);
    //     pathSum(root.left,targetSum);
    //     pathSum(root.right,targetSum);
    //     return ans;
    // }
    // public void helper(TreeNode root, int target,int sum)
    // {
    //     if(root==null)
    //     return ;
        
    //     sum+=root.val;
    //     if(sum==target)
    //     ans++;
         
    //         helper(root.left,target,sum);
    //         helper(root.right,target,sum);
    // }
}
