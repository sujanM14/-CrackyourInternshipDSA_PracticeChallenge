/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        Queue<TreeNode> q= new LinkedList<>();
        List<List<Integer>> ans= new ArrayList<>();
        if (root != null) { 
            q.add(root);
        }
        boolean zigzag=false;
        while(!q.isEmpty()){
            int size=q.size();
            List<Integer> comb=new ArrayList<>();
            for(int i=0;i<size;i++){
            TreeNode node =q.poll();
            if(zigzag)
             comb.add(0,node.val);  
             else
             comb.add(node.val);
             if(node.left!=null)
             q.add(node.left);
              if(node.right!=null)
             q.add(node.right);
        
        }
        ans.add(comb);
        zigzag=!zigzag;
        }
        return ans;
    }
}
