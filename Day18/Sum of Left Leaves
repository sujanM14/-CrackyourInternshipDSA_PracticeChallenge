/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int sumOfLeftLeaves(TreeNode root) {
        if(root==null)
        return 0;
        int sum=0;
        Queue<TreeNode> queue=new LinkedList<>();
       queue.add(root);
       while(!queue.isEmpty())
       {
           TreeNode node = queue.poll();
           if(node.left != null)
           {
               if(isLeaf(node.left))
               sum+=node.left.val;
               else queue.add(node.left);
           }
           if(node.right!= null)
        queue.add(node.right);
       }
    return sum;
    }
   public static boolean isLeaf(TreeNode root) 
   {
       if(root.left==null && root.right==null)
       return true;
       else 
       return false;
   }
}
