//Using hashmap(my solution)

class Solution {
    public int majorityElement(int[] nums) {
       HashMap<Integer,Integer> map = new HashMap<>();
       for(int i=0;i<nums.length;i++)
       {
           map.put(nums[i],map.getOrDefault(nums[i],0)+1);
           if(map.get(nums[i])>nums.length/2)
           return nums[i];
       } 
       return -1;
    }
}
//optimized
//by sorting

class Solution {
    public int majorityElement(int[] nums) {
       Arrays.sort(nums);
       int n=nums.length;
       return nums[n/2];
    }
}

//Moore Voting Algorithm

class Solution {
    public int majorityElement(int[] nums) {
       int cnt=0,res=0;
       for(int num:nums)
       {
           if(cnt==0)
           res=num;
           if(num==res)
           cnt++;
           else
           cnt--;
       }
       return res;
    }
}
