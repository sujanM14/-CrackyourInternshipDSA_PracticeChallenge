class Solution
{
    //Function to sort the given linked list using Merge Sort.
    static Node mergeSort(Node head)
    {
        // add your code here
       if (head == null || head.next == null) {
            return head;
        }
        
        Node middle=Findmiddle(head);
        Node node2=middle.next;
        middle.next = null; 
        
        Node left=mergeSort(head);
        Node right=mergeSort(node2);
        
        return Merge(left,right);
    }
    static Node Merge(Node l1,Node l2)
    {
        if(l1==null)
        return l2;
        if(l2==null)
        return l1;
        
        if(l1.data <l2.data)
        {
            l1.next=Merge(l1.next,l2);
            return l1;
        }else{
            l2.next=Merge(l1,l2.next);
            return l2;
        }
    }
    static Node Findmiddle(Node head)
    {
        if (head == null || head.next == null) {
            return head;
        }
        Node slow=head;
        Node fast=head.next;
        while(fast != null && fast.next != null )
        {
            slow=slow.next;
            fast=fast.next.next;
        }
        return slow;
    }
}
