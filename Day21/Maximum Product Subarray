class Solution {
    public int maxProduct(int[] nums) {
       if(nums==null ||nums.length==0)
       return 0;

      int[] f = new int[nums.length];
      int[] g = new int[nums.length];
       f[0]=nums[0]; 
       g[0]=nums[0]; 
       int res =nums[0];
       for(int i=1;i<nums.length;i++)
       {
          f[i]=Math.max(Math.max(f[i-1]*nums[i] ,g[i-1]*nums[i]),nums[i]);
          g[i]=Math.min(Math.min(f[i-1]*nums[i] ,g[i-1]*nums[i]),nums[i]);
          res=Math.max(res,f[i]);
       }
       return res;
    }
}
/********************************************************************************************************************************/
class Solution {
    public int maxProduct(int[] nums) {
       if(nums==null ||nums.length==0)
       return 0;
      int max=nums[0];
      int min=nums[0];
      int ans=nums[0];
      int temp;
      for(int i=1;i<nums.length;i++)
      {
         if(nums[i]<0)
         {
            temp=max;
            max=min;
            min=temp;
         }
         max=Math.max(nums[i],nums[i]*max);
         min=Math.min(nums[i],nums[i]*min);
         ans=Math.max(ans,max);
      }
      return ans;
    }
}
