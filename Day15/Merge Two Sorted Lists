/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        if(list1==null && list2==null)
        return null;
        else if(list1!=null && list2==null)
        return list1;
        else if(list1==null && list2!=null)
        return list2;
        else 
        {
           ListNode head1= list1;
           ListNode head2= list2; 
           ListNode dummy=new ListNode(-1,null);
           ListNode ptr= dummy;
           while(head1!=null && head2!=null)
           {
               if(head1.val < head2.val)
               {
                   ptr.next=head1;
                   head1=head1.next;
                   ptr=ptr.next;
               }
               else 
               {
                  ptr.next=head2;
                   head2=head2.next;
                   ptr=ptr.next;
               }
           }
           while(head1 != null)
           {
             ptr.next=head1;
             head1=head1.next;
             ptr=ptr.next;
           }
           while(head2 != null)
           {
                  ptr.next=head2;
                   head2=head2.next;
                   ptr=ptr.next;
           }
           return dummy.next;
        }
    }
}
