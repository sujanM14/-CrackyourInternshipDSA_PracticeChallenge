/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    
    int ans=0;
    int count=0;
   public void DFS(TreeNode root, int k){
        if(root==null) return;
        DFS(root.left,k);
        count++;
        if(count==k){
            ans=root.val;
            return;
        }
        DFS(root.right,k);
    }
    // public static void inorder(TreeNode root,ArrayList<Integer> ans)
    // {
    //     if(root==null)
    //     return;
    //     inorder(root.left,ans);
    //     ans.add(root.val);
    //     inorder(root.right,ans);

        
    // }
    public int kthSmallest(TreeNode root, int k) {
        // ArrayList<Integer> ans= new ArrayList<>();
        // inorder(root,ans);
        // if(k>ans.size() || k<1)
        // return -1;
        // else
        //  return ans.get(k-1); 
        DFS(root,k);
        return ans;
    }
}
