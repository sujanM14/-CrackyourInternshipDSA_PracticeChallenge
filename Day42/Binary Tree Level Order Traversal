/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    public List<List<Integer>> levelOrder(TreeNode root) {
        Queue <TreeNode> queue = new ArrayDeque();
        List<List<Integer>> ans = new ArrayList<List<Integer>>();
        if(root==null)
          return ans;
        queue.add(root);

        while(queue.size() > 0)
        {
            int size = queue.size();
            ArrayList <Integer> subans= new ArrayList<>();
            for(int i=0;i<size;i++)
           { 
            TreeNode temp = queue.remove();
            if(temp.left != null )
              queue.add(temp.left);
            if(temp.right != null )
              queue.add(temp.right);
            subans.add(temp.val);
              }
              ans.add(subans);
        }
        return ans;
    }
}
