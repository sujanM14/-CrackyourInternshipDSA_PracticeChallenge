class Solution {
    public List<List<Integer>> fourSum(int[] nums, int target) {

     List<List<Integer>> ans = new ArrayList<List<Integer>>();
        if(nums.length<4 || nums==null)
        return ans;
        Arrays.sort(nums);
        HashMap<Integer,Integer> map = new HashMap<>();

        for(int i=0;i<nums.length-3;i++)
        {
            for(int j=i+1;j<nums.length-2;j++){
               int left=j+1,right=nums.length-1;
               while(left<right)
               {
                   int sum=nums[i]+nums[j]+nums[left]+nums[right];
                   
                   if(sum==target)
                   {
                       List<Integer> subans = new ArrayList<>();
                       subans.add(nums[i]);
                       subans.add(nums[j]);
                       subans.add(nums[left]);
                       subans.add(nums[right]);
                       ans.add(subans);

                     while (left<right && nums[left]==subans.get(2)) 
                       left++;
                     while (left<right && nums[right]==subans.get(3)) 
                        right--;
                   }else if(sum<target)
                   left++;
                   else
                   right--;

               }
            while (j+1<nums.length - 2 && nums[j + 1]==nums[j]) 
            j++;
            }
            while(i+1<nums.length-3 && nums[i]==nums[i+1])
            i++;
        }
       return ans; 
    }
}
