/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
   public int  NthFromEnd(ListNode head, int n) {
        ListNode fast = head;
        ListNode slow = head;
        for(int i=0;i<n;i++)
        fast=fast.next;

        while(fast !=null)
        {
          slow=slow.next;
          fast=fast.next;
        }
        return slow.val;
    }
   public ListNode removeNthFromEnd(ListNode head, int n) {
    ListNode fast = head;
    ListNode slow = head;
    for(int i = 0; i < n; i++) {
        fast = fast.next;
    }
    if (fast == null) {
        return head.next;
    }
    while(fast != null && fast.next != null) {
        slow = slow.next;
        fast = fast.next;
    }
    if (slow != null && slow.next != null && slow.next.next != null) {
        slow.next = slow.next.next;
    } else {
        slow.next = null;
    }
    return head;
}

}
